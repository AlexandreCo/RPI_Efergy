Note: if you find inaccuracies or have more info, please report using git Issues

Supported Efergy Energy Monitors
- Efergy E2 Classic (need exact model number?)
- Efergy Elite 3.0 TPM (Rx model number is RX-ELITE 3.0 (TPM-NA), sensor model is ELITE-TPM-NA 1.0)
- Maybe others?

Instructions:

1) Check that #defines in EfergyRPI_log.c match settings for your specific Efergy sensor/transmitter type

  Pay particular attention to the following:
  
  #define MINLOWBIT           3 /* Min number of positive samples for a logic 0 */
  #define MINHIGHBIT 		      8	/* Min number of positive samples for a logic 1 (9 worked best on Elite 3.0 TPM) */
  #define VOLTAGE			      240	/* Usually set to line voltage, except set to 1 for Elite TPM  */
  #define FRAMEBYTECOUNT		  8	/* Efergy RF Message Byte Count (8 for E2 Classic, 9 for Elite TPM) */
  #define CHECKSUM_CRC_BYTES	1	/* Set to 1 to check for one byte checksum (eg E2 Classic) or 2 for CRC16 (eg Elite 3.0 TPM) */

  - Analysis/debug mode tries to decode up to 9 bytes even if FRAMEBYTECOUNT is set to 8.
  - It also tries both the 1 byte checksum calculation and the 2 byte CRC calculation regardless of the setting above.

2) Compile using: gcc -O3 -o EfergyRPI_log EfergyRPI_log.c  -lm 

3) Run by piping raw 16 bit samples output from rtl_fm to this program for decoding
 
  a) First check program help

  ./EfergyRPI_log -help

  b) Find optimal frequency and gain values by analyzing rtl_fm output in debug mode

  rtl_fm -f 433.51e6 -s 200000 -r 96000 -A fast | ./EfergyRPI_log -a
   - Adjust frequency (-f) by .1 plus or minus until debug output shows wave center close to 0
   - Gain (-g) may or may not be needed.  Some folks had best results by adding -g 19.7 to rtl_fm
 
  c) Run in logging mode to generate data file for post-processing by other programs
   rtl_fm -f 433.55e6 -s 200000 -r 96000 -A fast -g 19.7 2>/dev/null | ./EfergyRPI_log
